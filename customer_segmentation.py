# -*- coding: utf-8 -*-
"""customer_segmentation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1siLupAVAFh9PNrk_SgpYlYmW_UQGzdla
"""

import pandas as pd

from google.colab import drive
drive.mount('/content/drive')

data=pd.read_csv('/content/drive/MyDrive/Mall_Customers.csv')

data.tail()

data.shape

data.info()

data.isnull().sum()

data.describe()

"""***Kmean Clustering***"""

data.columns

x=data[{'Annual Income (k$)','Spending Score (1-100)'}]

from sklearn.cluster import KMeans

k_means=KMeans()
k_means.fit(x)

k_means=KMeans(n_clusters=5)
k_means.fit_predict(x)

"""**Elbow Method to find optimal number of Clusters**"""

wcss=[]
for i in range(1,11):
  k_means=KMeans(n_clusters=i)
  k_means.fit(x)
  wcss.append(k_means.inertia_)

wcss

import matplotlib.pyplot as plt
plt.plot(range(1,11),wcss)
plt.title("elbow Method")
plt.xlabel("Number of cluster")
plt.ylabel("WCSS")
plt.show()

"""**Model Training**"""

x=data[{'Annual Income (k$)','Spending Score (1-100)'}]

x

k_means=KMeans(n_clusters=5,random_state=42)
y_means=k_means.fit_predict(x)

y_means

plt.scatter(x.iloc[y_means==0,0],x.iloc[y_means==0,1],s=100,c='red',label="Cluster 1")
plt.scatter(x.iloc[y_means==1,0],x.iloc[y_means==1,1],s=100,c='yellow',label="Cluster 2")
plt.scatter(x.iloc[y_means==2,0],x.iloc[y_means==2,1],s=100,c='green',label="Cluster 3")
plt.scatter(x.iloc[y_means==3,0],x.iloc[y_means==3,1],s=100,c='blue',label="Cluster 4")
plt.scatter(x.iloc[y_means==4,0],x.iloc[y_means==4,1],s=100,c='black',label="Cluster 5")
plt.scatter(k_means.cluster_centers_[:,0],k_means.cluster_centers_[:,1],s=100,c='magenta')
plt.title("Cluster Segmentation")
plt.xlabel(" Annual Income")
plt.ylabel("Spending Score")
plt.legend()
plt.show()

k_means.predict([[13,70]])

"""**Save the Model**"""

import joblib

joblib.dump(k_means,"customer_segmentation")

model=joblib.load("customer_segmentation")

model.predict([[15,39]])





